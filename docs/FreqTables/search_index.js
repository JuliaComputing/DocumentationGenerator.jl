var documenterSearchIndex = {"docs": [

{
    "location": "#FreqTables.prop-Tuple{AbstractArray{#s767,N} where N where #s767<:Number}",
    "page": "Home",
    "title": "FreqTables.prop",
    "category": "method",
    "text": "prop(tbl::AbstractArray{<:Number}, [margin::Integer...])\n\nCreate table of proportions from a table tbl with margins generated for dimensions specified by margin. If margin is omitted proportions over the whole tbl are computed.\n\nIn particular when margin is 1 row proportions, and when margin is 2 column proportions are calculated.\n\nprop does not check if tbl contains non-negative values. Calculating sum over the result of prop over dimensions that are complement of margin produces AbstractArray containing only 1.0, see last example below.\n\nExamples\n\njulia> prop([1 2; 3 4])\n2×2 Array{Float64,2}:\n 0.1  0.2\n 0.3  0.4\n\njulia> prop([1 2; 3 4], 1)\n2×2 Array{Float64,2}:\n 0.333333  0.666667\n 0.428571  0.571429\n\njulia> prop([1 2; 3 4], 2)\n2×2 Array{Float64,2}:\n 0.25  0.333333\n 0.75  0.666667\n\njulia> prop([1 2; 3 4], 1, 2)\n2×2 Array{Float64,2}:\n 1.0  1.0\n 1.0  1.0\n\njulia> pt = prop(reshape(1:12, (2, 2, 3)), 3)\n2×2×3 Array{Float64,3}:\n[:, :, 1] =\n 0.1  0.3\n 0.2  0.4\n\n[:, :, 2] =\n 0.192308  0.269231\n 0.230769  0.307692\n\n[:, :, 3] =\n 0.214286  0.261905\n 0.238095  0.285714\n\njulia> sum(pt, (1, 2))\n1×1×3 Array{Float64,3}:\n[:, :, 1] =\n 1.0\n\n[:, :, 2] =\n 1.0\n\n[:, :, 3] =\n 1.0\n\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [FreqTables]\nOrder = [:type, :function]"
},

]}
