var documenterSearchIndex = {"docs": [

{
    "location": "#RingLists.RingList",
    "page": "Home",
    "title": "RingLists.RingList",
    "category": "type",
    "text": "RingList{T}() creates a new, empty RingList holding elements of type T. Example: RingList{Int}().\n\nRingList(list) creates a new RingList from the elements in the one-dimensional array list. Example: RingList([1,2,3]).\n\nRingList(x...) creates a new RingList from the arguments. Example: RingList(1,2,3).\n\n\n\n\n\n"
},

{
    "location": "#RingLists.insertafter!-Tuple{RingList,Any,Any}",
    "page": "Home",
    "title": "RingLists.insertafter!",
    "category": "method",
    "text": "insertafter!(a::RingList,x,y) inserts x into a after y.\n\n\n\n\n\n"
},

{
    "location": "#RingLists.previous-Tuple{RingList,Any}",
    "page": "Home",
    "title": "RingLists.previous",
    "category": "method",
    "text": "previous(a,x) returns the element y so that a[y]==x.\n\n\n\n\n\n"
},

{
    "location": "#Base.delete!-Tuple{Any,Any}",
    "page": "Home",
    "title": "Base.delete!",
    "category": "method",
    "text": "delete!(a,x) removes x from the RingList.\n\n\n\n\n\n"
},

{
    "location": "#Base.first",
    "page": "Home",
    "title": "Base.first",
    "category": "function",
    "text": "first(a::RingList, true_first::Bool = false) returns an element of a. If true_first is true, then try to return the smallest element held in a.\n\n\n\n\n\n"
},

{
    "location": "#Base.insert!-Union{Tuple{T}, Tuple{RingList{T},T}} where T",
    "page": "Home",
    "title": "Base.insert!",
    "category": "method",
    "text": "insert!(a,x) adds the element x into a. No guarantee where it will go. See also insertafter!\n\n\n\n\n\n"
},

{
    "location": "#Base.reverse-Union{Tuple{RingList{T}}, Tuple{T}} where T",
    "page": "Home",
    "title": "Base.reverse",
    "category": "method",
    "text": "reverse(a::RingList) returns a new RingList containing the same elements as a but in reverse order.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [RingLists]\nOrder = [:type, :function]"
},

]}
