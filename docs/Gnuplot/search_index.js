var documenterSearchIndex = {"docs": [

{
    "location": "#Gnuplot.exec-Tuple{Symbol,Array{String,1}}",
    "page": "Home",
    "title": "Gnuplot.exec",
    "category": "method",
    "text": "exec(sid::Symbol, s::Vector{String})\n\nDirectly execute commands on the underlying Gnuplot process, and return the result(s).\n\nExamples:\n\nexec(\"print GPVAL_TERM\")\nexec(\"plot sin(x)\")\n\n\n\n\n\n"
},

{
    "location": "#Gnuplot.gnuplot-Tuple{Symbol}",
    "page": "Home",
    "title": "Gnuplot.gnuplot",
    "category": "method",
    "text": "gnuplot(sid::Symbol)\n\ngnuplot(sid::Symbol, cmd::AbstractString)\n\nInitialize a new session and (optionally) the associated Gnuplot process\n\nArguments:\n\nsid: the session name (a Julia symbol);\ncmd: a string specifying the complete file path to a gnuplot executable.  If not given a dry session will be created, i.e. a session without underlying gnuplot process.\n\n\n\n\n\n"
},

{
    "location": "#Gnuplot.quit-Tuple{Symbol}",
    "page": "Home",
    "title": "Gnuplot.quit",
    "category": "method",
    "text": "quit()\n\nQuit the session and the associated gnuplot process (if any).\n\n\n\n\n\n"
},

{
    "location": "#Gnuplot.quitall-Tuple{}",
    "page": "Home",
    "title": "Gnuplot.quitall",
    "category": "method",
    "text": "quitall()\n\nQuit all the sessions and the associated gnuplot processes.\n\n\n\n\n\n"
},

{
    "location": "#Gnuplot.save-Tuple{}",
    "page": "Home",
    "title": "Gnuplot.save",
    "category": "method",
    "text": "save(...)\n\nSave the data and commands in the current session to either:\n\nthe gnuplot process (i.e. produce a plot): save(term=\"\", output=\"\");\nan IO stream: save(stream::IO; term=\"\", output=\"\");\na file: save(file::AbstractStrings; term=\"\", output=\"\").\n\nTo save the data and command from a specific session pass the ID as first argument, i.e.:\n\nsave(sid::Symbol, term=\"\", output=\"\");\nsave(sid::Symbol, stream::IO; term=\"\", output=\"\");\nsave(sid::Symbol, file::AbstractStrings; term=\"\", output=\"\").\n\nIn all cases the term keyword allows to specify a gnuplot terminal, and the output keyword allows to specify an output file.\n\n\n\n\n\n"
},

{
    "location": "#Gnuplot.setverbose-Tuple{Bool}",
    "page": "Home",
    "title": "Gnuplot.setverbose",
    "category": "method",
    "text": "setverbose(b::Bool)\n\nSet verbose flag to true or false (default: false).\n\n\n\n\n\n"
},

{
    "location": "#Base.println-Tuple{Gnuplot.DrySession,AbstractString}",
    "page": "Home",
    "title": "Base.println",
    "category": "method",
    "text": "println\n\nSend a string to gnuplot\'s STDIN.\n\nThe commands sent through send are not stored in the current   session (use newcmd to save commands in the current session).\n\nArguments:\n\ngp: a Session object;\nstr::String: command to be sent;\ncapture=false: set to true to capture and return the output.\n\n\n\n\n\n"
},

{
    "location": "#Gnuplot.CheckGnuplotVersion-Tuple{AbstractString}",
    "page": "Home",
    "title": "Gnuplot.CheckGnuplotVersion",
    "category": "method",
    "text": "CheckGnuplotVersion\n\nCheck whether gnuplot is runnable with the command given in cmd.   Also check that gnuplot version is >= 4.7 (required to use data   blocks).\n\n\n\n\n\n"
},

{
    "location": "#Gnuplot.newcmd-Tuple{Gnuplot.DrySession,String}",
    "page": "Home",
    "title": "Gnuplot.newcmd",
    "category": "method",
    "text": "newcmd\n\nSend a command to gnuplot process and store it in the current session.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [Gnuplot]\nOrder = [:type, :function]"
},

]}
