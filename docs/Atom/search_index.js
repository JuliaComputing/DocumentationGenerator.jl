var documenterSearchIndex = {"docs": [

{
    "location": "#Atom.handle-Tuple{Any,Any}",
    "page": "Home",
    "title": "Atom.handle",
    "category": "method",
    "text": "handle(func, typ)\n\nSet the handler for messages of type typ to func.\n\n\n\n\n\n"
},

{
    "location": "#Atom.handlemsg-Tuple{Any,Vararg{Any,N} where N}",
    "page": "Home",
    "title": "Atom.handlemsg",
    "category": "method",
    "text": "handlemsg(typ, args...)\n\nTries to call the message handler corresponding to typ (which can be set with handle).\n\n\n\n\n\n"
},

{
    "location": "#Atom.initialise-Tuple{}",
    "page": "Home",
    "title": "Atom.initialise",
    "category": "method",
    "text": "initialise(; welcome = false)\n\nSets up the environment for Atom.jl: Stop SIGINTs from killing Julia and send a welcome message to Atom if welcome == true.\n\n\n\n\n\n"
},

{
    "location": "#Atom.isactive-Tuple{Any}",
    "page": "Home",
    "title": "Atom.isactive",
    "category": "method",
    "text": "isactive(sock)\n\nCheck whether the socked sock exists and is open.\n\n\n\n\n\n"
},

{
    "location": "#Atom.msg-Tuple{Any,Vararg{Any,N} where N}",
    "page": "Home",
    "title": "Atom.msg",
    "category": "method",
    "text": "msg(typ, args...)\n\nPrints a json string to sock that contains all function arguments in an array.\n\n\n\n\n\n"
},

{
    "location": "#Atom.rpc-Tuple{Any,Vararg{Any,N} where N}",
    "page": "Home",
    "title": "Atom.rpc",
    "category": "method",
    "text": "rpc(typ, args...)\n\nSends a message to sock via msg. Blocks until the client returns a message (which needs to send back the callback field).\n\n\n\n\n\n"
},

{
    "location": "#Atom.serve-Tuple{Any}",
    "page": "Home",
    "title": "Atom.serve",
    "category": "method",
    "text": "serve(port; kws...)\n\nStart an asynchronous Julia server that listens on localhost:port and handle the messages sent over that socket. The kws... are passed through to initialise.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [Atom]\nOrder = [:type, :function]"
},

]}
