var documenterSearchIndex = {"docs": [

{
    "location": "#JuliaWebAPI.APIInvoker",
    "page": "Home",
    "title": "JuliaWebAPI.APIInvoker",
    "category": "type",
    "text": "APIInvoker holds the transport and format used for a remote api call.\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.APIInvoker",
    "page": "Home",
    "title": "JuliaWebAPI.APIInvoker",
    "category": "type",
    "text": "APIInvoker holds the transport and format used for a remote api call. This method creates an APIInvoker over ZMQ transport using JSON message format. (provided for backward compatibility)\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.APIResponder",
    "page": "Home",
    "title": "JuliaWebAPI.APIResponder",
    "category": "type",
    "text": "APIResponder holds the transport and format used for data exchange and the endpoint specifications.\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.APIResponder",
    "page": "Home",
    "title": "JuliaWebAPI.APIResponder",
    "category": "type",
    "text": "APIResponder holds the transport and format used for data exchange and the endpoint specifications. This method creates an APIResponder over ZMQ transport using JSON message format. (provided for backward compatibility)\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.DictMsgFormat",
    "page": "Home",
    "title": "JuliaWebAPI.DictMsgFormat",
    "category": "type",
    "text": "Intermediate format that is just a Dict. No serialization. A Dict with cmd (string), args (array), vargs (dict).\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.InProcTransport",
    "page": "Home",
    "title": "JuliaWebAPI.InProcTransport",
    "category": "type",
    "text": "Transport layer over in-process Channels\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.JSONMsgFormat",
    "page": "Home",
    "title": "JuliaWebAPI.JSONMsgFormat",
    "category": "type",
    "text": "Intermediate format based on JSON. A JSON object with cmd (string), args (array), vargs (dict).\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.SerializedMsgFormat",
    "page": "Home",
    "title": "JuliaWebAPI.SerializedMsgFormat",
    "category": "type",
    "text": "Intermediate format based on Julia serialization. A dict with cmd (string), args (array), vargs (dict).\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.ZMQTransport",
    "page": "Home",
    "title": "JuliaWebAPI.ZMQTransport",
    "category": "type",
    "text": "Transport layer over ZMQ sockets\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.apicall-Union{Tuple{F}, Tuple{T}, Tuple{APIInvoker{T,F},Any,Vararg{Any,N} where N}} where F<:AbstractMsgFormat where T<:AbstractTransport",
    "page": "Home",
    "title": "JuliaWebAPI.apicall",
    "category": "method",
    "text": "Calls a remote api cmd with args... and data.... The response is formatted as specified by the formatter specified in conn.\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.fnresponse-Tuple{AbstractMsgFormat,Any}",
    "page": "Home",
    "title": "JuliaWebAPI.fnresponse",
    "category": "method",
    "text": "extract and return the response data as a direct function call would have returned but throw error if the call was not successful.\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.httpresponse-Tuple{AbstractMsgFormat,Any}",
    "page": "Home",
    "title": "JuliaWebAPI.httpresponse",
    "category": "method",
    "text": "construct an HTTP Response object from the API response\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.process-Tuple{APIResponder}",
    "page": "Home",
    "title": "JuliaWebAPI.process",
    "category": "method",
    "text": "start processing as a server\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.register-Tuple{APIResponder,Function}",
    "page": "Home",
    "title": "JuliaWebAPI.register",
    "category": "method",
    "text": "Register a function as API call. TODO: validate method belongs to module?\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.call_api-Tuple{APISpec,APIResponder,Any,Dict{Symbol,Any}}",
    "page": "Home",
    "title": "JuliaWebAPI.call_api",
    "category": "method",
    "text": "call the actual API method, and send the return value back as response\n\n\n\n\n\n"
},

{
    "location": "#JuliaWebAPI.respond-Tuple{APIResponder,Int64,Dict,Any}",
    "page": "Home",
    "title": "JuliaWebAPI.respond",
    "category": "method",
    "text": "send a response over the transport in the specified format\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [JuliaWebAPI]\nOrder = [:type, :function]"
},

]}
