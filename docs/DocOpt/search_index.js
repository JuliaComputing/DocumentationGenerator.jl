var documenterSearchIndex = {"docs": [

{
    "location": "#DocOpt.docopt",
    "page": "Home",
    "title": "DocOpt.docopt",
    "category": "function",
    "text": "docopt(doc::AbstractString,\n       args=ARGS;\n       version=nothing,\n       help::Bool=true,\n       options_first::Bool=false,\n       exit_on_error::Bool=true)\n\nParse command-line arguments according to a help message.\n\nParsed command-line arguments are retuned as a dictionary of arguments of type Dict{AbstractString,Any}; keys are argument names or flag names, and values are argument values passed to the command-line arguments.\n\nSee http://docopt.org/ for the description language of help.\n\nArguments\n\ndoc: description of your command-line interface.\nargs=ARGS: argument vector to be parsed.\nversion=nothing: version of your command-line tool (e.g. v\"1.0.2\").\nhelp=true: show the help when \'-h\' or \'â€“help\' is passed.\noptions_first=false: force options to precede positional arguments.\nexit_on_error=true: print the usage and exit when parsing error happens.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [DocOpt]\nOrder = [:type, :function]"
},

]}
