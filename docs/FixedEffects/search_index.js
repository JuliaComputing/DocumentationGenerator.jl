var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": "(Image: Build Status) (Image: Coverage Status)This package solves least squares problem with high dimensional fixed effects. For a matrix D of high dimensional fixed effects, it finds b and 系 such that y = D\'b + 系 with E[D系] = 0. It is the back end for the package FixedEffectModels.jl, that estimates more general linears model with high-dimensional fixed effect.The package defines two functions solve_coefficients, that returns the coefficients b, and solve_residuals, that returns the residuals 系. See ?solve_residuals! or ?solve_coefficients! for the full syntax.using FixedEffects\n# define fixed effects:\np1 = FixedEffect(repeat(1:5, inner = 2))\n# combine fixed effects\np2 = FixedEffect(repeat(1:2, outer = 5), repeat(1:2, inner = 5))\n# define interacted fixed effects\np3 = FixedEffect(repeat(1:5, outer = 2), interaction = rand(10))\n\n# partial out a vector\nx = rand(10)\nsolve_residuals!(x, [p1, p2])\n\n# partial out a matrix\nX = rand(10, 5)\nsolve_residuals!(X, [p1, p2])\n\n# find the fixed effect coefficients\nsolve_coefficients!(x, [p1, p3])"
},

{
    "location": "autodocs/#FixedEffects.solve_coefficients!",
    "page": "Docstrings",
    "title": "FixedEffects.solve_coefficients!",
    "category": "function",
    "text": "Solve a least square problem for a set of FixedEffects\n\nsolve_coefficients!(y, fes, weights; method = :lsmr, maxiter = 10000, tol = 1e-8)\n\nArguments\n\ny : A AbstractVector{Float64} \nfes: A Vector{<:FixedEffect}\nweights: A AbstractWeights\nmethod : A Symbol for the method. Choices are :lsmr, :lsmrthreads, :lsmrparallel, :qr and :cholesky\nmaxiter : Maximum number of iterations\ntol : Tolerance\n\nReturns\n\nb : Solution of the least square problem\niterations: Number of iterations\nconverged: Did the algorithm converge?\n\nExamples\n\nusing  FixedEffects\np1 = repeat(1:5, inner = 2)\np2 = repeat(1:5, outer = 2)\nx = rand(10)\nsolve_coefficients!(rand(10), [FixedEffect(p1), FixedEffect(p2)])\n\n\n\n\n\n"
},

{
    "location": "autodocs/#FixedEffects.solve_residuals!",
    "page": "Docstrings",
    "title": "FixedEffects.solve_residuals!",
    "category": "function",
    "text": "Solve a least square problem for a set of FixedEffects\n\nsolve_residuals!(y, fes, weights; method = :lsmr, maxiter = 10000, tol = 1e-8)\n\nArguments\n\ny : A AbstractVector{Float64} or a AbstractMatrix{Float64}\nfes: A Vector{<:FixedEffect}\nweights: A AbstractWeights\nmethod : A Symbol for the method. Choices are :lsmr, :lsmrthreads, :lsmrparallel, :qr and :cholesky\nmaxiter : Maximum number of iterations\ntol : Tolerance\n\nReturns\n\nres :  Residual of the least square problem\niterations: Number of iterations\nconverged: Did the algorithm converge?\n\nExamples\n\nusing  FixedEffects\np1 = repeat(1:5, inner = 2)\np2 = repeat(1:5, outer = 2)\nsolve_residuals!(rand(10), [FixedEffect(p1), FixedEffect(p2)])\nsolve_residuals!(rand(10, 5), [FixedEffect(p1), FixedEffect(p2)])\n\n\n\n\n\n"
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [FixedEffects]\nOrder = [:type, :function]"
},

]}
