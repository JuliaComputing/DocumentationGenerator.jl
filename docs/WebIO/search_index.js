var documenterSearchIndex = {"docs": [

{
    "location": "#WebIO.Scope",
    "page": "Home",
    "title": "WebIO.Scope",
    "category": "type",
    "text": "Scope(id; kwargs...)\n\nAn object which can send and receive messages.\n\nFields:\n\nid::String: A unique ID\nimports: An array of js/html/css assets to load before rendering the contents of a scope.\n\n\n\n\n\n"
},

{
    "location": "#WebIO.setup_provider-Tuple{Union{AbstractString, Symbol}}",
    "page": "Home",
    "title": "WebIO.setup_provider",
    "category": "method",
    "text": "setup_provider(s::Union{Symbol, AbstractString})\n\nPerform any side-effects necessary to set up the given provider. For example, in IJulia, this causes the frontend to load the webio javascript bundle.\n\n\n\n\n\n"
},

{
    "location": "#WebIO.ConnectionPool",
    "page": "Home",
    "title": "WebIO.ConnectionPool",
    "category": "type",
    "text": "ConnectionPool(outbox::Channel, connections::Set{AbstractConnection}=Set())\n\nManages the distribution of messages from the outbox channel to a set of connections. The ConnectionPool asynchronously takes messages from its outbox and sends each message to every connection in the pool. Any closed connections are automatically removed from the pool.\n\n\n\n\n\n"
},

{
    "location": "#WebIO.SyncCallback",
    "page": "Home",
    "title": "WebIO.SyncCallback",
    "category": "type",
    "text": "A callable which updates the frontend\n\n\n\n\n\n"
},

{
    "location": "#WebIO.encode_scripts-Tuple{String}",
    "page": "Home",
    "title": "WebIO.encode_scripts",
    "category": "method",
    "text": "Any </script> tags in the js/html node representation can cause problems, because if they are printed inside a <script> tag, even if they are in quotes in a javascript string, the html parser will still read them as a closing script tag, and thus end the script content prematurely, causing untold woe.\n\n\n\n\n\n"
},

{
    "location": "#WebIO.ensure_connection-Tuple{WebIO.ConnectionPool}",
    "page": "Home",
    "title": "WebIO.ensure_connection",
    "category": "method",
    "text": "Ensure that the pool has at least one connection, potentially blocking the current task until that is the case.\n\n\n\n\n\n"
},

{
    "location": "#WebIO.re_register_renderables-Tuple{}",
    "page": "Home",
    "title": "WebIO.re_register_renderables",
    "category": "method",
    "text": "Called after a provider is setup\n\n\n\n\n\n"
},

{
    "location": "#WebIO.register_renderable-Union{Tuple{Type{T}}, Tuple{T}} where T",
    "page": "Home",
    "title": "WebIO.register_renderable",
    "category": "method",
    "text": "`WebIO.register_renderable(MyType::Type)`\n\nRegisters that a WebIO.render method is available for instances of MyType. Allows WebIO to hook into the display machinery of backends such as Atom and IJulia to display the WebIO rendered version of the type as appropriate.\n\nAlso defines a Base.show(io::IO, m::MIME\"text/html\", x::MyType) as Base.show(io, m, WebIO.render(x))\n\n\n\n\n\n"
},

{
    "location": "#WebIO.render",
    "page": "Home",
    "title": "WebIO.render",
    "category": "function",
    "text": "render(x::MyType)\n\nGeneric function that defines how a Julia object is rendered. Should return a Node object.\n\n\n\n\n\n"
},

{
    "location": "#WebIO.render-Tuple{Observable}",
    "page": "Home",
    "title": "WebIO.render",
    "category": "method",
    "text": "WebIO.render(obs::Observable)\n\nReturns a WebIO Node whose contents are the richest version of the observable\'s value, and which updates to display the observable\'s current value\n\n\n\n\n\n"
},

{
    "location": "#WebIO.set_nosync-Tuple{Any,Any}",
    "page": "Home",
    "title": "WebIO.set_nosync",
    "category": "method",
    "text": "Set observable without synchronizing with the counterpart on the browser\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [WebIO]\nOrder = [:type, :function]"
},

]}
