var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": ""
},

{
    "location": "#Memoize.jl-1",
    "page": "Readme",
    "title": "Memoize.jl",
    "category": "section",
    "text": "(Image: Build Status) (Image: Coverage Status)Easy memoization for Julia."
},

{
    "location": "#Usage-1",
    "page": "Readme",
    "title": "Usage",
    "category": "section",
    "text": "using Memoize\n@memoize function x(a)\n	println(\"Running\")\n	a\nendjulia> x(1)\nRunning\n1\n\njulia> x(1)\n1By default, Memoize.jl uses an ObjectIdDict as a cache, but it\'s also possible to specify the type of the cache. If you want to cache vectors based on the values they contain, you probably want this:using Memoize\n@memoize Dict function x(a)\n	println(\"Running\")\n	a\nend"
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [Memoize]\nOrder = [:type, :function]"
},

]}
