var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": ""
},

{
    "location": "#Bijectors.jl-1",
    "page": "Readme",
    "title": "Bijectors.jl",
    "category": "section",
    "text": "(Image: Build Status) (Image: Build status)This package implements a set of functions for transforming constrained random variables (e.g. simplexes, intervals) to Euclidean space. The 3 main functions implemented in this package are the link, invlink and logpdf_with_trans for a number of distributions. The distributions supported are:RealDistribution: Union{Cauchy, Gumbel, Laplace, Logistic, NoncentralT, Normal, NormalCanon, TDist},\nPositiveDistribution: Union{BetaPrime, Chi, Chisq, Erlang, Exponential, FDist, Frechet, Gamma, InverseGamma, InverseGaussian, Kolmogorov, LogNormal, NoncentralChisq, NoncentralF, Rayleigh, Weibull},\nUnitDistribution: Union{Beta, KSOneSided, NoncentralBeta},\nSimplexDistribution: Union{Dirichlet},\nPDMatDistribution: Union{InverseWishart, Wishart}, and\nTransformDistribution: Union{T, Truncated{T}} where T<:ContinuousUnivariateDistribution.All exported names from the Distributions.jl package are reexported from Bijectors."
},

{
    "location": "#Functions-1",
    "page": "Readme",
    "title": "Functions",
    "category": "section",
    "text": "link: maps a sample of a random distribution dist from its support to a value in R^n. Example:julia> using Bijectors\n\njulia> dist = Beta(2, 2)\nBeta{Float64}(α=2.0, β=2.0)\n\njulia> x = rand(dist)\n\n0.7472542331020509\n\njulia> y = link(dist, x)\n1.084021356473311invlink: the inverse of the link function. Example:julia> z = invlink(dist, y)\n0.6543406780096065\n\njulia> x == z\ntruelogpdf_with_trans: finds log of the (transformed) probability density function of a distribution dist at a sample x. Example:julia> using Bijectors\n\njulia> dist = Dirichlet(2, 3)\nDirichlet{Float64}(alpha=[3.0, 3.0])\n\njulia> x = rand(dist)\n2-element Array{Float64,1}:\n 0.46094823621110165\n 0.5390517637888984\n\njulia> logpdf_with_trans(dist, x, false) # ignoring the transformation\n0.6163709733893024\n\njulia> logpdf_with_trans(dist, x, true) # considering the transformation\n-0.7760422307471244"
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [Bijectors]\nOrder = [:type, :function]"
},

]}
