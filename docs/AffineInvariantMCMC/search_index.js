var documenterSearchIndex = {"docs": [

{
    "location": "#AffineInvariantMCMC.flattenmcmcarray-Tuple{Array,Array}",
    "page": "Home",
    "title": "AffineInvariantMCMC.flattenmcmcarray",
    "category": "method",
    "text": "Flatten MCMC arrays\n\n\n\n\n\n"
},

{
    "location": "#AffineInvariantMCMC.sample",
    "page": "Home",
    "title": "AffineInvariantMCMC.sample",
    "category": "function",
    "text": "Bayesian sampling using Goodman & Weare\'s Affine Invariant Markov chain Monte Carlo (MCMC) Ensemble sampler (aka Emcee)\n\nAffineInvariantMCMC.sample(llhood, numwalkers=10, numsamples_perwalker=100, thinning=1)\n\nArguments:\n\nllhood : function estimating loglikelihood (for example, generated using Mads.makearrayloglikelihood())\nnumwalkers : number of walkers\nx0 : normalized initial parameters (matrix of size (length(params), numwalkers))\nthinning : removal of any thinning realization\na :\n\nReturns:\n\nmcmcchain : final MCMC chain\nllhoodvals : log likelihoods of the final samples in the chain\n\nReference:\n\nGoodman & Weare, \"Ensemble samplers with affine invariance\", Communications in Applied Mathematics and Computational Science, DOI: 10.2140/camcos.2010.5.65, 2010.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [AffineInvariantMCMC]\nOrder = [:type, :function]"
},

]}
