var documenterSearchIndex = {"docs": [

{
    "location": "#Circuitscape.compute-Tuple{String}",
    "page": "Home",
    "title": "Circuitscape.compute",
    "category": "method",
    "text": "compute(path::String)\n\nCall the compute function on the configuration file.\n\nInputs:\n\npath::String - Path to configuration file\n\n\n\n\n\n"
},

{
    "location": "#Circuitscape.model_problem-Tuple{Any,Any}",
    "page": "Home",
    "title": "Circuitscape.model_problem",
    "category": "method",
    "text": "Define model circuitscape problem - helps in tests\n\n\n\n\n\n"
},

{
    "location": "#Circuitscape.construct_local_node_map-Tuple{Any,Any,Any}",
    "page": "Home",
    "title": "Circuitscape.construct_local_node_map",
    "category": "method",
    "text": "Construct nodemap specific to a connected component\n\n\n\n\n\n"
},

{
    "location": "#Circuitscape.get_num_pairs-Union{Tuple{V}, Tuple{Any,Array{V,1},Any}} where V",
    "page": "Home",
    "title": "Circuitscape.get_num_pairs",
    "category": "method",
    "text": "Returns all possible pairs to solve.\n\nInput:\n\nccs::Vector{Vector{Int}} - vector of connected components\nfp::Vector{Int} - vector of focal points \nexclude_pairs::Vector{Tuple{Int,Int}} - vector of point pairs (tuples) to exclude \n\nOutput: \n\nn - total number of pairs\n\n\n\n\n\n"
},

{
    "location": "#Circuitscape.laplacian-Union{Tuple{SparseMatrixCSC{T,V}}, Tuple{V}, Tuple{T}} where V where T",
    "page": "Home",
    "title": "Circuitscape.laplacian",
    "category": "method",
    "text": "Calculate laplacian of the adjacency matrix of a graph\n\n\n\n\n\n"
},

{
    "location": "#Circuitscape.network_pairwise-Tuple{Any,Any,Any}",
    "page": "Home",
    "title": "Circuitscape.network_pairwise",
    "category": "method",
    "text": "Primary driver for network pairwise. \n\n\n\n\n\n"
},

{
    "location": "#Circuitscape.single_ground_all_pairs-Union{Tuple{V}, Tuple{T}, Tuple{GraphData{T,V},Any,Any}, Tuple{GraphData{T,V},Any,Any,Any}} where V where T",
    "page": "Home",
    "title": "Circuitscape.single_ground_all_pairs",
    "category": "method",
    "text": "Core kernel of Circuitscape - used to solve several pairs\n\nInput:\n\ndata::GraphData\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [Circuitscape]\nOrder = [:type, :function]"
},

]}
