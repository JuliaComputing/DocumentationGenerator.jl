var documenterSearchIndex = {"docs": [

{
    "location": "#Format.fmt",
    "page": "Home",
    "title": "Format.fmt",
    "category": "function",
    "text": "Creates a new FormatSpec by overriding the defaults and passes it to pyfmt\n\nOptionally width and precision can be passed positionally, after the value to be formatted.\n\nSome keyword arguments can be passed simply as symbols:\n\nSymbol            | Meaning\n------------------|------------------------------------------\n:ljust or :left   | Left justified, same as < for FormatSpec\n:rjust or :right  | Right justified, same as > for FormatSpec\n:zpad or :zeropad | Pad with 0s on left\n:ipre or :prefix  | Whether to prefix 0b, 0o, or 0x\n:commas           | Add commas every 3 digits\n\nAlso, keyword arguments can be given:\n\nKeyword | Type | Meaning                   | Default\n--------|------|---------------------------|-------\nfill    | Char | Fill character            | \' \'\nalign   | Char | Alignment character       | \'\\0\'\nsign    | Char | Sign character            | \'-\'\nwidth   | Int  | Field width               | -1, i.e. ignored\nprec    | Int  | Floating Precision        | -1, i.e. ignored\nipre    | Bool | Use 0b, 0o, or 0x prefix? | false\nzpad    | Bool | Pad with 0s on left       | false\ntsep    | Bool | Use thousands separator?  | false\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [Format]\nOrder = [:type, :function]"
},

]}
