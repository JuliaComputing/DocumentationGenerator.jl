var documenterSearchIndex = {"docs": [

{
    "location": "#DiracNotation.dirac",
    "page": "Home",
    "title": "DiracNotation.dirac",
    "category": "function",
    "text": "dirac(state::PureState, statename::String=\"ψ\"; header::Bool=false)\ndirac(io::IO, state::PureState, statename::String=\"ψ\"; header::Bool=false)\ndirac(state::PureState, dims::Vector{Int}, statename::String=\"ψ\"; header::Bool=false)\ndirac(io::IO, state::PureState, dims::Vector{Int}, statename::String=\"ψ\"; header::Bool=false)\n\nDisplay a vector as Dirac notation.\n\nExample\n\njulia> using Random; Random.seed!(0);\n\njulia> dirac(randn(Complex{Float64}, 2))\n|ψ⟩ = (0.480201+0.585777im)|0⟩+(-0.249614-0.0953561im)|1⟩\n\njulia> qutrit = rand(Complex{Float64},3);\n\njulia> dirac(qutrit, [3])\n|ψ⟩ = (0.27888+0.203477im)|0⟩+(0.0423017+0.0682693im)|1⟩+(0.361828+0.973216im)|2⟩\n\ndirac(qubitqutrit, [2,3])\n|ψ⟩ = (-0.487131-0.539384im)|00⟩+(0.281063+0.573909im)|01⟩+(-0.24491-0.132634im)|02⟩+(-1.1365-1.75419im)|10⟩+(1.60954+0.155347im)|11⟩+(-0.0828287-0.42515im)|12⟩\n\n\n\n\n\n"
},

{
    "location": "#DiracNotation.dirac",
    "page": "Home",
    "title": "DiracNotation.dirac",
    "category": "function",
    "text": "dirac(state::MixedState, statename::String=\"ρ\"; header::Bool=false)\ndirac(io::IO, state::MixedState, statename::String=\"ρ\"; header::Bool=false)\ndirac(state::MixedState, dims::Vector{Int}, statename::String=\"ρ\"; header::Bool=false)\ndirac(state::MixedState, ldims::Vector{Int}, rdims::Vector{Int}, statename::String=\"ρ\"; header::Bool=false)\ndirac(io::IO, state::MixedState, ldims::Vector{Int}, rdims::Vector{Int}, statename::String=\"ρ\"; header::Bool=false)\n\nDisplay a matrix as Dirac notation.\n\nExample\n\njulia> using Random; Random.seed!(0);\n\njulia> op1 = randn(Complex{Float64}, 2,2);\n\njulia> dirac(op1)\nρ = (0.480201+0.585777im)|0⟩⟨0|+(0.414801+0.210248im)|0⟩⟨1|+(-0.249614-0.0953561im)|1⟩⟨0|+(0.0459249-0.0770869im)|1⟩⟨1|\n\njulia> op2 = randn(Complex{Float64}, 4,3);\n\njulia> dirac(op2, [2,2], [3])\nρ = (-0.363602+1.11322im)|00⟩⟨0|+(-1.1365-1.75419im)|00⟩⟨1|+(0.197612+0.078787im)|00⟩⟨2|+(-0.487131-0.539384im)|01⟩⟨0|+(1.60954+0.155347im)|01⟩⟨1|+(-0.253062+0.334967im)|01⟩⟨2|+(0.281063+0.573909im)|10⟩⟨0|+(-0.0828287-0.42515im)|10⟩⟨1|+(0.212297-0.539294im)|10⟩⟨2|+(-0.24491-0.132634im)|11⟩⟨0|+(0.807711-0.0626612im)|11⟩⟨1|+(1.00625+0.288773im)|11⟩⟨2|\n\n\n\n\n\n"
},

{
    "location": "#DiracNotation.ind2Nary-Tuple{Int64,Array{Int64,1}}",
    "page": "Home",
    "title": "DiracNotation.ind2Nary",
    "category": "method",
    "text": "ind2Nary(n::Int, dims::Vector{Int})\n\nArguments\n\nn::Int: n th row(column) of qudit/operator array.\ndims::Vector{Int}: N-ary array\n\n\n\n\n\n"
},

{
    "location": "#DiracNotation.print_dirac",
    "page": "Home",
    "title": "DiracNotation.print_dirac",
    "category": "function",
    "text": "print_dirac(io::IO, state::PureState, dims::Vector{Int}, statename::String=\"ψ\")\nprint_dirac(io::IO, state::MixedState,\n                    ldims::Vector{Int},\n                    rdims::Vector{Int},\n                    statename::String=\"ρ\") where T <: Number\n\n\n\n\n\n"
},

{
    "location": "#DiracNotation.print_dirac_term-Union{Tuple{T}, Tuple{IO,Int64,T,Array{Int64,1}}, Tuple{IO,Int64,T,Array{Int64,1},Any}} where T<:Number",
    "page": "Home",
    "title": "DiracNotation.print_dirac_term",
    "category": "method",
    "text": "print_dirac_term(io::IO, idx::Int, value::T, dims::Vector{Int}, isfirstterm=false) where T\nprint_dirac_term(io::IO, row::Int, col::Int,\n                         value::T, ldims::Vector{Int}, rdims::Vector{Int}, isfirstterm=false) where T\n\n\n\n\n\n"
},

{
    "location": "#DiracNotation.set_properties-Tuple{}",
    "page": "Home",
    "title": "DiracNotation.set_properties",
    "category": "method",
    "text": "set_properties(; kw...)\n\nArguments\n\nprecision::Int.\nislatex::Bool. true -> rendered by mathjax on IJulia\ndisplayall::Bool. true -> display all terms.\nnumhead: Display the first part of terms. Default is 5 terms.\nnewline::Bool.\nimag_suffix::String.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [DiracNotation]\nOrder = [:type, :function]"
},

]}
