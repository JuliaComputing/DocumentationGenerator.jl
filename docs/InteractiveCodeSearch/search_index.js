var documenterSearchIndex = {"docs": [

{
    "location": "#Base.kill-Tuple{InteractiveCodeSearch.BackgroundSearch}",
    "page": "Home",
    "title": "Base.kill",
    "category": "method",
    "text": "kill(search::InteractiveCodeSearch.BackgroundSearch)\n\nStop search.\n\n\n\n\n\n"
},

{
    "location": "#InteractiveCodeSearch.bg",
    "page": "Home",
    "title": "InteractiveCodeSearch.bg",
    "category": "function",
    "text": "InteractiveCodeSearch.bg(id::Int = 0)\n\nLookup background search by id.  For convenience, id = 0 is the last search and id = -1 is the second last search.  More generally, non-positive id is treated as the offset from end.\n\n\n\n\n\n"
},

{
    "location": "#InteractiveCodeSearch.find_source_file-Tuple{Any}",
    "page": "Home",
    "title": "InteractiveCodeSearch.find_source_file",
    "category": "method",
    "text": "find_source_file(file)\n\nFind source file and return its full path.  It just calls Base.find_source_file and return its result for normal Julia installation.  For nightly Julia build, it tries to guess the right path when Base.find_source_file failed.\n\n\n\n\n\n"
},

{
    "location": "#InteractiveCodeSearch.get_history_provider-Tuple{}",
    "page": "Home",
    "title": "InteractiveCodeSearch.get_history_provider",
    "category": "method",
    "text": "get_history_provider() :: REPLHistoryProvider\n\n\n\n\n\n"
},

{
    "location": "#InteractiveCodeSearch.load_history_provider-Tuple{}",
    "page": "Home",
    "title": "InteractiveCodeSearch.load_history_provider",
    "category": "method",
    "text": "load_history_provider() :: REPLHistoryProvider\n\n\n\n\n\n"
},

{
    "location": "#InteractiveCodeSearch.read_stdout-Tuple{AbstractString,Any}",
    "page": "Home",
    "title": "InteractiveCodeSearch.read_stdout",
    "category": "method",
    "text": "read_stdout(input::AbstractString, cmd)\nread_stdout(input_provider, cmd)\n\nJulia implementation of \"echo {input} | {cmd}\".\n\n\n\n\n\n"
},

{
    "location": "#InteractiveCodeSearch.stop-Tuple{InteractiveCodeSearch.BackgroundSearch}",
    "page": "Home",
    "title": "InteractiveCodeSearch.stop",
    "category": "method",
    "text": "InteractiveCodeSearch.stop(search::BackgroundSearch)\nInteractiveCodeSearch.stop(id::Int = 0)\n\nStop search.  The first form can be invoked via kill(search) as well (where kill is the function exported from Base).  See also bg.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [InteractiveCodeSearch]\nOrder = [:type, :function]"
},

]}
