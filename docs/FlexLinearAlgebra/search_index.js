var documenterSearchIndex = {"docs": [

{
    "location": "#FlexLinearAlgebra.FlexMatrix-Tuple{Any,Any}",
    "page": "Home",
    "title": "FlexLinearAlgebra.FlexMatrix",
    "category": "method",
    "text": "FlexMatrix{T}(rows,cols) creates a new FlexMatrix with rows indexed by rows, columns indexed by cols and all zero entries of type T (which is Number if omitted).\n\nFlexMatrix(v::FlexVector) converts v into a one-column FlexMatrix whose sole column index is Int(1)\n\n\n\n\n\n"
},

{
    "location": "#FlexLinearAlgebra.FlexVector-Tuple{Any}",
    "page": "Home",
    "title": "FlexLinearAlgebra.FlexVector",
    "category": "method",
    "text": "FlexVector{T}(idx) creates a new FlexVector with entries indexed by idx filled with zeros of type T (which defaults to Number)\n\n\n\n\n\n"
},

{
    "location": "#FlexLinearAlgebra.FlexConvert-Union{Tuple{Array{T,1}}, Tuple{T}} where T",
    "page": "Home",
    "title": "FlexLinearAlgebra.FlexConvert",
    "category": "method",
    "text": "FlexConvert(vec) converts the vector vec into a FlexVector.\n\n\n\n\n\n"
},

{
    "location": "#FlexLinearAlgebra.FlexOnes-Tuple{Type,Any}",
    "page": "Home",
    "title": "FlexLinearAlgebra.FlexOnes",
    "category": "method",
    "text": "FlexOnes(T,dom) creates an all 1s vector indexed by dom. If T is missing, values default to Float64.\n\n\n\n\n\n"
},

{
    "location": "#FlexLinearAlgebra.col_keys-Tuple{FlexMatrix}",
    "page": "Home",
    "title": "FlexLinearAlgebra.col_keys",
    "category": "method",
    "text": "col_keys(M::FlexMatrix) returns a list of the keys to the columns of M.\n\n\n\n\n\n"
},

{
    "location": "#FlexLinearAlgebra.delete_col!-Tuple{FlexMatrix,Any}",
    "page": "Home",
    "title": "FlexLinearAlgebra.delete_col!",
    "category": "method",
    "text": "delete_col!(A,c) deletes row c from the FlexMatrix A.\n\n\n\n\n\n"
},

{
    "location": "#FlexLinearAlgebra.delete_entry!-Tuple{FlexVector,Any}",
    "page": "Home",
    "title": "FlexLinearAlgebra.delete_entry!",
    "category": "method",
    "text": "delete_entry!(v,x) deletes the entry indexed by x in the FlexVector x.\n\n\n\n\n\n"
},

{
    "location": "#FlexLinearAlgebra.delete_row!-Tuple{FlexMatrix,Any}",
    "page": "Home",
    "title": "FlexLinearAlgebra.delete_row!",
    "category": "method",
    "text": "delete_row!(A,r) deletes row r from the FlexMatrix A.\n\n\n\n\n\n"
},

{
    "location": "#FlexLinearAlgebra.row_keys-Tuple{FlexMatrix}",
    "page": "Home",
    "title": "FlexLinearAlgebra.row_keys",
    "category": "method",
    "text": "row_keys(M::FlexMatrix) returns a list of the keys to the rows of M.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [FlexLinearAlgebra]\nOrder = [:type, :function]"
},

]}
