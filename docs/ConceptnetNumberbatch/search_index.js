var documenterSearchIndex = {"docs": [

{
    "location": "#ConceptnetNumberbatch.download_embeddings-Tuple{}",
    "page": "Home",
    "title": "ConceptnetNumberbatch.download_embeddings",
    "category": "method",
    "text": "Download ConceptNetNumberbatch embeddings given a url and saves them to a file pointed to by localfile.\n\n\n\n\n\n"
},

{
    "location": "#ConceptnetNumberbatch.embed_document-Union{Tuple{E}, Tuple{K}, Tuple{L}, Tuple{ConceptNet{L,K,E},AbstractString}} where E<:Real where K where L<:Languages.Language",
    "page": "Home",
    "title": "ConceptnetNumberbatch.embed_document",
    "category": "method",
    "text": "Retrieves the embedding matrix for a given document.\n\n\n\n\n\n"
},

{
    "location": "#ConceptnetNumberbatch.load_embeddings-Union{Tuple{AbstractString}, Tuple{E}} where E<:Real",
    "page": "Home",
    "title": "ConceptnetNumberbatch.load_embeddings",
    "category": "method",
    "text": "Load the embeddings given a valid ConceptNetNumberbatch filepath, lading at most max_vocab_size embeddings if no specific keep_words are specified, filtering on languages.\n\n\n\n\n\n"
},

{
    "location": "#ConceptnetNumberbatch.tokenize_for_conceptnet-Union{Tuple{Array{S,1}}, Tuple{S}, Tuple{Array{S,1},Regex}} where S<:AbstractString",
    "page": "Home",
    "title": "ConceptnetNumberbatch.tokenize_for_conceptnet",
    "category": "method",
    "text": "Fast tokenization function.\n\n\n\n\n\n"
},

{
    "location": "#ConceptnetNumberbatch._get_vocab_size",
    "page": "Home",
    "title": "ConceptnetNumberbatch._get_vocab_size",
    "category": "function",
    "text": "Calculate how many embeddings to retreive.\n\n\n\n\n\n"
},

{
    "location": "#ConceptnetNumberbatch._load_gz_embeddings-Union{Tuple{S2}, Tuple{S1}, Tuple{E}, Tuple{S1,Codec,Union{Nothing, Int64},Array{S2,1}}} where S2<:AbstractString where S1<:AbstractString where E<:Real",
    "page": "Home",
    "title": "ConceptnetNumberbatch._load_gz_embeddings",
    "category": "method",
    "text": "Load the ConceptNetNumberbatch embeddings from a .gz or uncompressed file.\n\n\n\n\n\n"
},

{
    "location": "#ConceptnetNumberbatch._load_hdf5_embeddings-Union{Tuple{E}, Tuple{S2}, Tuple{S1}, Tuple{S1,Union{Nothing, Int64},Array{S2,1}}} where E<:Real where S2<:AbstractString where S1<:AbstractString",
    "page": "Home",
    "title": "ConceptnetNumberbatch._load_hdf5_embeddings",
    "category": "method",
    "text": "Load the ConceptNetNumberbatch embeddings from a HDF5 file.\n\n\n\n\n\n"
},

{
    "location": "#ConceptnetNumberbatch._parseline-Union{Tuple{E}, Tuple{Any,Type{E}}} where E<:Real",
    "page": "Home",
    "title": "ConceptnetNumberbatch._parseline",
    "category": "method",
    "text": "Parse a line of text from a ConceptNetNumberbatch delimited file.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [ConceptnetNumberbatch]\nOrder = [:type, :function]"
},

]}
