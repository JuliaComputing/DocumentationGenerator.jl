var documenterSearchIndex = {"docs": [

{
    "location": "#CodecZlib.DeflateCompressor-Tuple{}",
    "page": "Home",
    "title": "CodecZlib.DeflateCompressor",
    "category": "method",
    "text": "DeflateCompressor(;level=-1, windowbits=-1)\n\nCreate a deflate compression codec.\n\nArguments\n\nlevel: compression level (-1..9)\nwindowbits: size of history buffer (8..15)\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.DeflateCompressorStream-Tuple{IO}",
    "page": "Home",
    "title": "CodecZlib.DeflateCompressorStream",
    "category": "method",
    "text": "DeflateCompressorStream(stream::IO; kwargs...)\n\nCreate a deflate compression stream (see DeflateCompressor for kwargs).\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.DeflateDecompressor-Tuple{}",
    "page": "Home",
    "title": "CodecZlib.DeflateDecompressor",
    "category": "method",
    "text": "DeflateDecompressor(;windowbits=15)\n\nCreate a deflate decompression codec.\n\nArguments\n\nwindowbits: size of history buffer (8..15)\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.DeflateDecompressorStream-Tuple{IO}",
    "page": "Home",
    "title": "CodecZlib.DeflateDecompressorStream",
    "category": "method",
    "text": "DeflateDecompressorStream(stream::IO; kwargs...)\n\nCreate a deflate decompression stream (see DeflateDecompressor for kwargs).\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.GzipCompressor-Tuple{}",
    "page": "Home",
    "title": "CodecZlib.GzipCompressor",
    "category": "method",
    "text": "GzipCompressor(;level=-1, windowbits=15)\n\nCreate a gzip compression codec.\n\nArguments\n\nlevel: compression level (-1..9)\nwindowbits: size of history buffer (8..15)\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.GzipCompressorStream-Tuple{IO}",
    "page": "Home",
    "title": "CodecZlib.GzipCompressorStream",
    "category": "method",
    "text": "GzipCompressorStream(stream::IO; kwargs...)\n\nCreate a gzip compression stream (see GzipCompressor for kwargs).\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.GzipDecompressor-Tuple{}",
    "page": "Home",
    "title": "CodecZlib.GzipDecompressor",
    "category": "method",
    "text": "GzipDecompressor(;windowbits=15, gziponly=false)\n\nCreate a gzip decompressor codec.\n\nIf gziponly is false, this codec can decompress the zlib format as well.\n\nArguments\n\nwindowbits: size of history buffer (8..15)\ngziponly: flag to inactivate data format detection\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.GzipDecompressorStream-Tuple{IO}",
    "page": "Home",
    "title": "CodecZlib.GzipDecompressorStream",
    "category": "method",
    "text": "GzipDecompressorStream(stream::IO; kwargs...)\n\nCreate a gzip decompression stream (see GzipDecompressor for kwargs).\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.ZlibCompressor-Tuple{}",
    "page": "Home",
    "title": "CodecZlib.ZlibCompressor",
    "category": "method",
    "text": "ZlibCompressor(;level=-1, windowbits=15)\n\nCreate a zlib compression codec.\n\nArguments\n\nlevel: compression level (-1..9)\nwindowbits: size of history buffer (8..15)\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.ZlibCompressorStream-Tuple{IO}",
    "page": "Home",
    "title": "CodecZlib.ZlibCompressorStream",
    "category": "method",
    "text": "ZlibCompressorStream(stream::IO)\n\nCreate a zlib compression stream (see ZlibCompressor for kwargs).\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.ZlibDecompressor-Tuple{}",
    "page": "Home",
    "title": "CodecZlib.ZlibDecompressor",
    "category": "method",
    "text": "ZlibDecompressor(;windowbits=15)\n\nCreate a zlib decompression codec.\n\nArguments\n\nwindowbits: size of history buffer (8..15)\n\n\n\n\n\n"
},

{
    "location": "#CodecZlib.ZlibDecompressorStream-Tuple{IO}",
    "page": "Home",
    "title": "CodecZlib.ZlibDecompressorStream",
    "category": "method",
    "text": "ZlibDecompressorStream(stream::IO; kwargs...)\n\nCreate a deflate decompression stream (see ZlibDecompressor for kwargs).\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [CodecZlib]\nOrder = [:type, :function]"
},

]}
