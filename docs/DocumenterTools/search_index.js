var documenterSearchIndex = {"docs": [

{
    "location": "#DocumenterTools.generate-Tuple{AbstractString}",
    "page": "Home",
    "title": "DocumenterTools.generate",
    "category": "method",
    "text": "DocumenterTools.generate(path::String; name = nothing, format = :html)\n\nCreate a documentation stub in path, which is usually a sub folder in the package root. The name of the package is determined automatically, but can be given with the name keyword argument.\n\ngenerate creates the following files in path:\n\n.gitignore\nsrc/index.md\nmake.jl\nmkdocs.yml\nProject.toml\n\nArguments\n\npath file path to the documentation directory.\n\nKeywords Arguments\n\nname is the name of the package (without .jl). If name is not given generate tries to detect it automatically.\n\nformat can be either :html (default), :markdown or :pdf corresponding to the format keyword to Documenter\'s makedocs function, see Documenter\'s manual.\n\nExamples\n\njulia> using DocumenterTools\n\njulia> Documenter.generate(\"path/to/MyPackage/docs\")\n[ ... output ... ]\n\n\n\n\n\n"
},

{
    "location": "#DocumenterTools.generate-Tuple{Module}",
    "page": "Home",
    "title": "DocumenterTools.generate",
    "category": "method",
    "text": "DocumenterTools.generate(pkg::Module; dir = \"docs\", format = :html)\n\nSame as generate(path::String) but the path and name is determined automatically from the module.\n\nnote: Note\nThe package must be in development mode. Make sure you run pkg> develop pkg from the Pkg REPL, or Pkg.develop(\"pkg\") before generating docs.\n\nExamples\n\njulia> using DocumenterTools\n\njulia> using MyPackage\n\njulia> DocumenterTools.generate(MyPackage)\n[ ... output ... ]\n\n\n\n\n\n"
},

{
    "location": "#DocumenterTools.package_devpath-Tuple{Module}",
    "page": "Home",
    "title": "DocumenterTools.package_devpath",
    "category": "method",
    "text": "package_devpath(pkg)\n\n\nReturns the path to the top level directory of a devved out package source tree. The package is identified by its top level module pkg.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [DocumenterTools]\nOrder = [:type, :function]"
},

]}
