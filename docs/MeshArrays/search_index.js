var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": ""
},

{
    "location": "#MeshArrays.jl-1",
    "page": "Readme",
    "title": "MeshArrays.jl",
    "category": "section",
    "text": "(Image: Travis Build Status) (Image: codecov) (Image: Coverage Status) (Image: DOI)This repository contains the MeshArrays.jl package introduced at the JuliaCon-2018 conference by this presentation. The code has passed a full test suite with julia v0.7 and v1.0 but is still regarded as a preliminary implementation."
},

{
    "location": "#Installation-And-Usage-1",
    "page": "Readme",
    "title": "Installation And Usage",
    "category": "section",
    "text": "To install this Julia package first execute add MeshArrays at the pkg> prompt. To use it then execute using MeshArrays at the main > REPL prompt or include this command in your modules or startup.jl file. Julia\'s package manager, Pkg, is currently documented here within docs.julialang.org. Notebooks that illustrate the use MeshArrays.jl in practice are linked below."
},

{
    "location": "#Main-Package-Features-1",
    "page": "Readme",
    "title": "Main Package Features",
    "category": "section",
    "text": "MeshArrays.jl primarily defines composite types that embed inter-connected array collections within a struct and provides an exchange function that effectively transfers data between connected arrays. The composite types specify how each array collection forms a mesh and provide information to allow exchange to dispatch to the appropriate method. Various configurations that are commonly used in Earth System Models are implemented using the concrete type called gcmfaces. Embedded arrays, or meshes, each represent a subdomain within, e.g., an Earth System Model grid.The gcmfaces name derives from a previous Matlab / Octave package that was introduced in Forget et al., 2015, doi:10.5194/gmd-8-3071-2015, and inspired this Julia package. Here, GCM is an acronym for General Circulation Model, or Global Climate Model as described in this wikipedia entry, and faces is just another name for meshes, arrays, facets, or subdomains."
},

{
    "location": "#Notebooks-And-Grids-1",
    "page": "Readme",
    "title": "Notebooks And Grids",
    "category": "section",
    "text": "The JuliaCon-2018 presentation relied on two Jupyter notebooks available in this repository (demo_type.ipynb and demo_exch.ipynb) and pre-defined grids available from this website. These grids can, e.g., be downloaded as follows:setenv DemoGrids \'ftp://mit.ecco-group.org/gforget/grid_examples/\'\nwget --recursive {$DemoGrids}/GRID_CS32/\nwget --recursive {$DemoGrids}/GRID_LLC90/\nmv mit.ecco-group.org/gforget/grid_examples/GRID_* .But the JuliaCon2018Notebooks repo also contains demo_smooth.ipynb which illustrates how the smooth function is used for CI testing purposes and does not require downloading any of the predefined grids. "
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [MeshArrays]\nOrder = [:type, :function]"
},

]}
