var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": ""
},

{
    "location": "#LibGEOS.jl-1",
    "page": "Readme",
    "title": "LibGEOS.jl",
    "category": "section",
    "text": "(Image: Build Status) (Image: Build Status) (Image: Coverage Status)LibGEOS is a LGPL-licensed package for manipulation and analysis of planar geometric objects, based on the libraries GEOS (the engine of PostGIS) and JTS (from which GEOS is ported).Among other things, it allows you to parse Well-known Text (WKT)p1 = readgeom(\"POLYGON((0 0,1 0,1 1,0 0))\")\np2 = readgeom(\"POLYGON((0 0,1 0,1 1,0 1,0 0))\")\np3 = readgeom(\"POLYGON((2 0,3 0,3 1,2 1,2 0))\")(Image: Example 1)Add a buffer around themg1 = buffer(p1, 0.5)\ng2 = buffer(p2, 0.5)\ng3 = buffer(p3, 0.5)(Image: Example 2)and take the union of different geometriespolygon = LibGEOS.union(g1, g3)(Image: Example 3)GEOS functionality is extensive, so coverage is incomplete, but the basic functionality for working with geospatial data is already available. I\'m learning as I go along, so documentation is lacking, but if you\'re interested, you can have a look at the examples in the examples/ folder, or the tests in test/test_geo_interface.jl and test/test_geos_operations.jl."
},

{
    "location": "#Installation-1",
    "page": "Readme",
    "title": "Installation",
    "category": "section",
    "text": "At the Julia prompt, run julia   julia> Pkg.add(\"LibGEOS\")   This will install both the Julia package and GEOS shared libraries together. To just reinstall the GEOS shared libraries, run Pkg.build(\"LibGEOS\").Test that LibGEOS works by runnningjulia   julia> Pkg.test(\"LibGEOS\")"
},

{
    "location": "autodocs/#LibGEOS.createCoordSeq",
    "page": "Docstrings",
    "title": "LibGEOS.createCoordSeq",
    "category": "function",
    "text": "createCoordSeq(x::Real, y::Real, z::Real) -> Ptr{Ptr{Void}}\n\nCreate a createCoordSeq of a single 3D coordinate\n\n\n\n\n\n"
},

{
    "location": "autodocs/#LibGEOS.createCoordSeq",
    "page": "Docstrings",
    "title": "LibGEOS.createCoordSeq",
    "category": "function",
    "text": "createCoordSeq(x::Real, y::Real) -> Ptr{Ptr{Void}}\n\nCreate a createCoordSeq of a single 2D coordinate\n\n\n\n\n\n"
},

{
    "location": "autodocs/#LibGEOS.createCoordSeq",
    "page": "Docstrings",
    "title": "LibGEOS.createCoordSeq",
    "category": "function",
    "text": "createCoordSeq(coords::Vector{Float64}) -> Ptr{Ptr{Void}}\n\nCreate a createCoordSeq of a single N dimensional coordinate\n\n\n\n\n\n"
},

{
    "location": "autodocs/#LibGEOS.createCoordSeq",
    "page": "Docstrings",
    "title": "LibGEOS.createCoordSeq",
    "category": "function",
    "text": "createCoordSeq(size::Integer; ndim::Integer=2) -> Ptr{Ptr{Void}}\n\nCreate a Coordinate sequence with size coordinates ofdims\'\' dimensions (Return NULL on exception)\n\n\n\n\n\n"
},

{
    "location": "autodocs/#LibGEOS.createCoordSeq",
    "page": "Docstrings",
    "title": "LibGEOS.createCoordSeq",
    "category": "function",
    "text": "createCoordSeq(coords::Vector{Float64}) -> Ptr{Ptr{Void}}\n\nCreate a createCoordSeq of a multiple N dimensional coordinate\n\n\n\n\n\n"
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [LibGEOS]\nOrder = [:type, :function]"
},

]}
