var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": ""
},

{
    "location": "#MemoryArena-1",
    "page": "Readme",
    "title": "MemoryArena",
    "category": "section",
    "text": "A Julia module that provides a type-safe memory arena based on the TypedArena in the Rust library.This allows fast allocation of large numbers of objects of the same type. The memory arena does not allow deallocation of individual objects, rather all objects are cleaned up when the memory arena is manually destroyed."
},

{
    "location": "#Warnings-1",
    "page": "Readme",
    "title": "Warnings",
    "category": "section",
    "text": "At this point, the TypedArena does not support Union types or abstracttypes. This is a planned feature.You should not store objects in the arena which containreferences to objects managed by the Julia garbage collector. Doing so will almost surely result in corrupt memory and a crashing program.Type safety and program stability can be compromised if you directlymanipulate the pointer contained by the RefCell. Do so at your own risk."
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [MemoryArena]\nOrder = [:type, :function]"
},

]}
