var documenterSearchIndex = {"docs": [

{
    "location": "#LatinSquares.check_latin-Tuple{Array{Int64,2}}",
    "page": "Home",
    "title": "LatinSquares.check_latin",
    "category": "method",
    "text": "check_latin(A) checks if A is a Latin square. (The entries must be chosen from 1:n when A is an n-by-n matrix).\n\n\n\n\n\n"
},

{
    "location": "#LatinSquares.check_ortho-Tuple{Array{Int64,2},Array{Int64,2}}",
    "page": "Home",
    "title": "LatinSquares.check_ortho",
    "category": "method",
    "text": "check_ortho(A,B) checks that matrices A and B are a pair of orthogonal Latin squares.\n\n\n\n\n\n"
},

{
    "location": "#LatinSquares.latin",
    "page": "Home",
    "title": "LatinSquares.latin",
    "category": "function",
    "text": "latin(n) returns a simple n-by-n Latin square. More generally, latin(n,a,b) generates a Latin square whose i,j-entry is a*(i-1) + b*(j-1) + 1 (wrapping around n, of course).\n\nNote: If parameters n,a,b do not generate a legitimate Latin square an error is thrown.\n\n\n\n\n\n"
},

{
    "location": "#LatinSquares.ortho_latin",
    "page": "Home",
    "title": "LatinSquares.ortho_latin",
    "category": "function",
    "text": "A,B = ortho_latin(n,quick=true) returns a pair of orthogonal n-by-n Latin squares. If quick is true, we first try to find the pair using basic number theory. If that fails, or if quick is set to false, integer programming is used.\n\nA,B = ortho_latin(n,r,s) builds the Latin squares latin(n,r) and latin(n,s) and, if they are orthogonal, returns them as the answer. (Otherwise, throws an error.) See: find_ortho_parameters.\n\n\n\n\n\n"
},

{
    "location": "#LatinSquares.find_ortho_parameters-Tuple{Int64}",
    "page": "Home",
    "title": "LatinSquares.find_ortho_parameters",
    "category": "method",
    "text": "find_ortho_parameters(n) tries to find parameters r and s so that ortho_latin(n,r,s) will succeed. Returns (r,s) if successful or throws an error if not.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [LatinSquares]\nOrder = [:type, :function]"
},

]}
