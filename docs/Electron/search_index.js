var documenterSearchIndex = {"docs": [

{
    "location": "#Electron.Application-Tuple{}",
    "page": "Home",
    "title": "Electron.Application",
    "category": "method",
    "text": "function Application()\n\nStart a new Electron application. This will start a new process for that Electron app and return an instance of Application that can be used in the construction of Electron windows.\n\n\n\n\n\n"
},

{
    "location": "#Electron.Window",
    "page": "Home",
    "title": "Electron.Window",
    "category": "type",
    "text": "function Window([app::Application,] options::Dict)\n\nOpen a new Window in the application app. Pass the content of options to the Electron BrowserWindow constructor.\n\nIf app is not specified, use the default Electron application, starting one if needed.\n\n\n\n\n\n"
},

{
    "location": "#Electron.Window-Tuple{Electron._Application{Window},AbstractString}",
    "page": "Home",
    "title": "Electron.Window",
    "category": "method",
    "text": "function Window([app::Application,] uri::URI)\n\nOpen a new Window in the application app. Show the content as a text/html file with utf-8 encoding.\n\nIf app is not specified, use the default Electron application, starting one if needed.\n\n\n\n\n\n"
},

{
    "location": "#Electron.Window-Tuple{Electron._Application{Window},URI}",
    "page": "Home",
    "title": "Electron.Window",
    "category": "method",
    "text": "function Window([app::Application,] uri::URI)\n\nOpen a new Window in the application app. Show the content that uri points to in that new window.\n\nIf app is not specified, use the default Electron application, starting one if needed.\n\n\n\n\n\n"
},

{
    "location": "#Electron.load-Tuple{Window,AbstractString}",
    "page": "Home",
    "title": "Electron.load",
    "category": "method",
    "text": "load(win::Window, html::AbstractString)\n\nLoad html in the Electron window win.\n\n\n\n\n\n"
},

{
    "location": "#Electron.load-Tuple{Window,URI}",
    "page": "Home",
    "title": "Electron.load",
    "category": "method",
    "text": "load(win::Window, uri::URI)\n\nLoad uri in the Electron window win.\n\n\n\n\n\n"
},

{
    "location": "#Base.Filesystem.pwd-Tuple{Type{URI}}",
    "page": "Home",
    "title": "Base.Filesystem.pwd",
    "category": "method",
    "text": "pwd(URI)\n\nReturn pwd() as a URI resource.\n\n\n\n\n\n"
},

{
    "location": "#Base.close-Tuple{Electron._Application{Window}}",
    "page": "Home",
    "title": "Base.close",
    "category": "method",
    "text": "close(app::Application)\n\nTerminates the Electron application referenced by app.\n\n\n\n\n\n"
},

{
    "location": "#Base.close-Tuple{Window}",
    "page": "Home",
    "title": "Base.close",
    "category": "method",
    "text": "close(win::Window)\n\nClose the windows referenced by win.\n\n\n\n\n\n"
},

{
    "location": "#Base.run-Tuple{Electron._Application{Window},AbstractString}",
    "page": "Home",
    "title": "Base.run",
    "category": "method",
    "text": "run(app::Application, code::AbstractString)\n\nRun the JavaScript code that is passed in code in the main application thread of the app Electron process. Returns the value that the JavaScript expression returns.\n\n\n\n\n\n"
},

{
    "location": "#Base.run-Tuple{Window,AbstractString}",
    "page": "Home",
    "title": "Base.run",
    "category": "method",
    "text": "run(win::Window, code::AbstractString)\n\nRun the JavaScript code that is passed in code in the render thread of the win Electron windows. Returns the value that the JavaScript expression returns.\n\n\n\n\n\n"
},

{
    "location": "#Electron.URI_file-Tuple{Any,Any}",
    "page": "Home",
    "title": "Electron.URI_file",
    "category": "method",
    "text": "URI_file(base, filespec)\n\nConstruct an absolute URI to filespec relative to base.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [Electron]\nOrder = [:type, :function]"
},

]}
