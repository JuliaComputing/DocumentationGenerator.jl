var documenterSearchIndex = {"docs": [

{
    "location": "#BKTrees.BKTree",
    "page": "Home",
    "title": "BKTrees.BKTree",
    "category": "type",
    "text": "The B-K tree structure.\n\n\n\n\n\n"
},

{
    "location": "#BKTrees.Node",
    "page": "Home",
    "title": "BKTrees.Node",
    "category": "type",
    "text": "A node in the B-K tree.\n\n\n\n\n\n"
},

{
    "location": "#BKTrees.add!-Union{Tuple{T}, Tuple{BKTree{T},T}} where T",
    "page": "Home",
    "title": "BKTrees.add!",
    "category": "method",
    "text": "Adds a node (i.e. Node{T}(item::T)) to the tree.\n\n\n\n\n\n"
},

{
    "location": "#BKTrees.find-Union{Tuple{T}, Tuple{BKTree{T},T,Int64}} where T",
    "page": "Home",
    "title": "BKTrees.find",
    "category": "method",
    "text": "Find items in the tree whose distance is less or equal to n and returns the top k items, ordered ascending according to the distance.\n\n\n\n\n\n"
},

{
    "location": "#BKTrees.hamming_distance-Union{Tuple{N2}, Tuple{N1}, Tuple{N1,N2}} where N2<:Integer where N1<:Integer",
    "page": "Home",
    "title": "BKTrees.hamming_distance",
    "category": "method",
    "text": "Calculates the Hamming distance (numbers of different bits) between two numbers.\n\n\n\n\n\n"
},

{
    "location": "#BKTrees.is_empty_node-Tuple{Node}",
    "page": "Home",
    "title": "BKTrees.is_empty_node",
    "category": "method",
    "text": "Determines whether a Node in the BKTree is empty or not.\n\n\n\n\n\n"
},

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": "Package doesn\'t contain Documenter docs.Docs automatically generated by juliadocs.orgModules = [BKTrees]\nOrder = [:type, :function]"
},

]}
